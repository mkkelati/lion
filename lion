#!/bin/bash

# LION VPS MANAGER - Advanced SSH/Stunnel Manager with TLS_AES_256_GCM_SHA384
# Professional SSH connection manager using Stunnel with enforced TLSv1.3 encryption
# Based on DRAGON VPS MANAGER skeleton but enhanced with modern security standards

clear
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31mError\033[1;33m] \033[1;37m- \033[1;33m🦁 YOU NEED TO RUN AS ROOT!\033[0m"
rm $HOME/lion > /dev/null 2>&1; exit 0
}

# Global Configuration
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r'| sed -e 's/[^a-z.]//ig'| rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')

cd $HOME

# Progress bar function
fun_bar () {
comando[0]="$1"
comando[1]="$2"
(
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
) > /dev/null 2>&1 &
tput civis
echo -ne "  \033[1;33m🦁 PLEASE WAIT... \033[1;37m- \033[1;33m["
while true; do
for((i=0; i<18; i++)); do
echo -ne "\033[1;31m#"
sleep 0.1s
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e "\033[1;33m]"
sleep 1s
tput cuu1
tput dl1
echo -ne "  \033[1;33m🦁 PLEASE WAIT... \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m🦁 DONE!\033[1;37m"
tput cnorm
}

# Key verification function
function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
echo -e "\n\033[1;31m🦁 KEY INVALID!\033[0m"
rm -rf $HOME/lion > /dev/null 2>&1
sleep 2
clear; exit 1
}
}

# Welcome Banner
echo -e "\033[1;31m\033[0m"
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%40s%s%-12s\n' "🦁─────────ㅤ🦁ㅤWelcome To LION VPS MANAGERㅤ🦁ㅤ─────────🦁" ; tput sgr0
echo -e "\033[1;31m🦁──────────────────────────────────────────────────────🦁\033[0m"
echo ""
echo -e "\033[1;31m🦁 ATTENTION!ㅤ⚠️ㅤ.\033[1;33mㅤTHIS SCRIPT CONTAINS ADVANCED FEATURES!!\033[0m"
echo ""
echo -e "\033[1;31m🦁 \033[1;33mINSTALL A PROFESSIONAL SET OF TOOLS FOR\033[0m"
echo -e "\033[1;33mSSH TUNNEL MANAGEMENT WITH TLS_AES_256_GCM_SHA384\033[0m"
echo ""
echo -e "\033[1;32m🦁 \033[1;32mSECURITY! \033[1;33mENFORCES TLSv1.3 WITH MODERN CIPHERS \033[0m"
echo -e "\033[1;33mFOR MAXIMUM SECURITY AND PERFORMANCE!\033[0m"
echo ""
echo -e "\033[1;31m🦁──────────────ㅤ🦁ㅤLION VPS MANAGERㅤ🦁ㅤ──────────────🦁\033[0m"
echo ""

# Confirmation
echo -ne "\033[1;36m🦁 Want to continue? [Y/N]: \033[1;37m"; read x
[[ $x = @(n|N) ]] && exit

# SSH Configuration with TLS hardening
sed -i 's/Port 22222/Port 22/g' /etc/ssh/sshd_config  > /dev/null 2>&1
echo "Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com" >> /etc/ssh/sshd_config
echo "MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com" >> /etc/ssh/sshd_config
echo "KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group16-sha512" >> /etc/ssh/sshd_config
service ssh restart  > /dev/null 2>&1

echo -e "\n\033[1;36m🦁 CHECKING SYSTEM...(Initializing LION Security Protocol)\033[1;37m TLS_AES_256_GCM_SHA384\033[0m"
rm $_Ink/list > /dev/null 2>&1
sleep 3s

echo "/bin/lionmenu" > /bin/lion && chmod +x /bin/lion > /dev/null 2>&1
echo "/bin/lionmenu" > /bin/l && chmod +x /bin/l > /dev/null 2>&1

rm versao* > /dev/null 2>&1
echo "v2.0.0-LION-TLS" > versao

echo -e "\n\033[1;32m🦁 LION SECURITY PROTOCOL ACTIVATED!\033[1;32m"
sleep 1s
echo ""

# Database management
[[ -f "$HOME/usuarios.db" ]] && {
clear
echo -e "\n\033[0;34m🦁───────────────────────────────────────────────────🦁\033[0m"
echo ""
echo -e "                 \033[1;33m• \033[1;31m🦁 ATTENTION!\033[1;33m• \033[0m"
echo ""
echo -e "\033[1;33mA User Database \033[1;32m(usuarios.db) \033[1;33mwas"
echo -e "Found! Want to keep it by preserving the limit"
echo -e "of Simultaneous connections of users? Or Want"
echo -e "create a new database?\033[0m"
echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mKeep Current Database\033[0m"
echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1;33mCreate New Database\033[0m"
echo -e "\n\033[0;34m🦁───────────────────────────────────────────────────🦁\033[0m"
echo ""
tput setaf 2 ; tput bold ; read -p "🦁 Option?: " -e -i 1 optiondb ; tput sgr0
} || {
awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db

clear
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%35s%s%-18s\n' "🦁 WAIT FOR LION INSTALLATION." ; tput sgr0
echo ""
echo ""
echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32m🦁 UPDATING SYSTEM...\033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
echo ""
echo -e "    \033[1;33m🦁 UPDATES WITH TLS SECURITY ENHANCEMENTS!\033[0m"
echo ""

# System update function
fun_attlist () {
apt-get update -y
apt-get upgrade -y
[[ ! -d /usr/share/.lion ]] && mkdir /usr/share/.lion
echo "lion-security: $(date)" > /usr/share/.lion/.lion
echo "TLS_AES_256_GCM_SHA384" > /usr/share/.lion/.cipher
}
fun_bar 'fun_attlist'

clear
echo ""
echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32m🦁 INSTALLING LION PACKAGES\033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
echo ""
echo -e "\033[1;33m🦁 INSTALLING SECURITY PACKAGES WITH TLS SUPPORT!\033[0m"
echo ""

# Package installation with security focus
inst_pct () {
_pacotes=("bc" "apache2" "cron" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python3-pip" "stunnel4" "openssl" "ssl-cert" "ca-certificates")
for _prog in ${_pacotes[@]}; do
apt install $_prog -y
done
pip3 install speedtest-cli cryptography
}
fun_bar 'inst_pct'

# Firewall configuration for TLS ports
[[ -f "/usr/sbin/ufw" ]] && {
ufw allow 443/tcp   # HTTPS/TLS
ufw allow 22/tcp    # SSH
ufw allow 80/tcp    # HTTP
ufw allow 8443/tcp  # Custom TLS port
ufw allow 9443/tcp  # Stunnel TLS port
ufw --force enable
}

clear
echo ""
echo -e "              \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32m🦁 CREATING LION MODULES...\033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
echo ""
echo -e "      \033[1;33m🦁 CONFIGURING TLS_AES_256_GCM_SHA384 SECURITY!\033[0m"
echo ""

# Create directory structure
create_lion_structure () {
mkdir -p /etc/lion/{install,modulos,sistema}
mkdir -p /var/log/lion
mkdir -p /etc/stunnel

# Create Stunnel configuration with TLS_AES_256_GCM_SHA384
cat > /etc/stunnel/lion.conf << 'EOF'
; LION VPS Manager - Stunnel Configuration
; Enforces TLSv1.3 with TLS_AES_256_GCM_SHA384 cipher suite

pid = /var/run/stunnel-lion.pid
output = /var/log/lion/stunnel.log

; TLS Configuration - Force TLSv1.3 only
sslVersion = TLSv1.3
ciphersuites = TLS_AES_256_GCM_SHA384

; Disable older protocols
options = -NO_SSLv2
options = -NO_SSLv3
options = -NO_TLSv1
options = -NO_TLSv1.1
options = -NO_TLSv1.2

; Security options
options = -NO_COMPRESSION
options = -CIPHER_SERVER_PREFERENCE
options = -SINGLE_DH_USE
options = -SINGLE_ECDH_USE

; Certificate verification
verify = 2
CAfile = /etc/ssl/certs/ca-certificates.crt

[lion-ssh]
accept = 9443
connect = 127.0.0.1:22
cert = /etc/stunnel/lion.pem
key = /etc/stunnel/lion.key

[lion-proxy]
accept = 8443
connect = 127.0.0.1:3128
cert = /etc/stunnel/lion.pem
key = /etc/stunnel/lion.key
EOF

# Generate self-signed certificate for Stunnel
openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj "/C=US/ST=Security/L=TLS/O=LION-VPS/CN=lion-manager" \
    -keyout /etc/stunnel/lion.key \
    -out /etc/stunnel/lion.pem

chmod 600 /etc/stunnel/lion.key
chmod 644 /etc/stunnel/lion.pem

# Set version
echo "LION-v2.0.0-TLS" > /etc/lion/sistema/versao
}

fun_bar 'create_lion_structure'

clear
echo ""
cd $HOME
IP=$(wget -qO- ipv4.icanhazip.com)
echo -e "        \033[1;33m  \033[1;32m🦁 LION INSTALLATION COMPLETED.🦁\033[1;33m  \033[0m"
echo ""
echo -e "\033[1;31m\033[1;33m🦁 MAIN COMMANDS:- \033[1;32mlion\033[0m \033[1;33mor\033[0m \033[1;32ml\033[0m"
echo -e "\033[1;33m🦁 MENU COMMAND:- \033[1;32mlionmenu\033[0m"
echo -e "\033[1;33m🦁 SECURITY CIPHER:- \033[1;32mTLS_AES_256_GCM_SHA384\033[0m"
echo -e "\033[1;33m🦁 MORE INFORMATION \033[1;31m(\033[1;36m🦁 TELEGRAM\033[1;31m): \033[1;37m@LION_VPS_MANAGER \033[0m"
echo -e ""
echo -e "\033[1;31m \033[1;33m🦁--TIP!--🦁\033[1;36mㅤ--LION Manager with TLS_AES_256_GCM_SHA384 encryption.\033[0m"
echo -e " https://$IP:9443 (Stunnel TLS SSH)"
echo -e " https://$IP:8443 (Stunnel TLS Proxy)"
echo -e ""

# Create the main menu script
cat > /bin/lionmenu << 'LIONMENU_EOF'
#!/bin/bash

# LION VPS Manager - Main Menu
# TLS_AES_256_GCM_SHA384 Enforcement

clear
source /etc/lion/modulos/cabecalho 2>/dev/null || {
echo -e "\033[1;31m🦁 LION VPS MANAGER 🦁\033[0m"
echo -e "\033[1;33m═══════════════════════════════════════\033[0m"
echo -e "\033[1;32mTLS_AES_256_GCM_SHA384 Security Active\033[0m"
echo -e "\033[1;33m═══════════════════════════════════════\033[0m"
}

while true; do
echo ""
echo -e "\033[1;36m🦁 LION VPS MANAGER - MAIN MENU 🦁\033[0m"
echo ""
echo -e "\033[1;33m[01] \033[1;37m• \033[1;33mCREATE SSH USER\033[0m"
echo -e "\033[1;33m[02] \033[1;37m• \033[1;33mREMOVE SSH USER\033[0m"
echo -e "\033[1;33m[03] \033[1;37m• \033[1;33mMONITOR CONNECTIONS\033[0m"
echo -e "\033[1;33m[04] \033[1;37m• \033[1;33mCONFIGURE STUNNEL TLS\033[0m"
echo -e "\033[1;33m[05] \033[1;37m• \033[1;33mMANAGE PROXIES\033[0m"
echo -e "\033[1;33m[06] \033[1;37m• \033[1;33mSYSTEM INFORMATION\033[0m"
echo -e "\033[1;33m[07] \033[1;37m• \033[1;33mSECURITY SETTINGS\033[0m"
echo -e "\033[1;33m[08] \033[1;37m• \033[1;33mUPDATE LION\033[0m"
echo -e "\033[1;33m[00] \033[1;37m• \033[1;31mEXIT\033[0m"
echo ""
echo -ne "\033[1;32m🦁 Select Option: \033[1;37m"; read x

case "$x" in
1|01) /etc/lion/modulos/criarusuario ;;
2|02) /etc/lion/modulos/remover ;;
3|03) /etc/lion/modulos/conexao ;;
4|04) /etc/lion/modulos/stunnel-config ;;
5|05) /etc/lion/modulos/proxy ;;
6|06) /etc/lion/modulos/info ;;
7|07) /etc/lion/modulos/security ;;
8|08) /etc/lion/modulos/update ;;
0|00) echo -e "\033[1;33m🦁 Goodbye!\033[0m"; exit ;;
*) echo -e "\033[1;31m🦁 Invalid Option!\033[0m"; sleep 1 ;;
esac
done
LIONMENU_EOF

chmod +x /bin/lionmenu

echo -e "\033[1;32m🦁 LION Manager Ready! Type 'lion' or 'l' to start!\033[0m"
rm $HOME/lion && cat /dev/null > ~/.bash_history && history -c
